{"version":3,"sources":["Scripts/Constants.js","Apis/Api.js","Components/Shared/EditModal.js","Scripts/DateUtils.js","Components/Shared/MessageCard.js","Components/Shared/MessageList.js","Components/Shared/Toast.js","Components/Shared/Loader.js","Pages/Feed.js","Components/Layout/Header.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","create","baseURL","EditModal","props","useState","author","setAuthor","content","setContent","id","className","onClick","toggleModal","hideOnly","isDelete","placeholder","value","onChange","event","target","rows","cols","delete","DateUtils","date","days","Date","getTime","Math","round","MessageCard","startTouch","message","messageIdx","listPosition","updateMessageDetails","updated","name","photoUrl","showButton","setShowButton","showModal","setShowModal","setIsDelete","data","messageID","prevState","CardBody","useMemo","src","alt","getUpdatedDays","actionBtnList","key","icon","method","onDoubleClick","onTouchStart","evt","touches","screenX","onTouchEnd","endTouch","changedTouches","map","item","MessageList","messages","otherProps","idx","Toast","toastMessageClass","toastMessage","Loader","Array","from","length","class","Feed","messageList","setMessageList","prevToken","setPrevToken","isFetching","setIsFetching","offsetHeight","setOffsetHeight","showToast","setShowToast","toastDetails","setToastDetails","isLoading","setIsLoading","params","limit","window","onscroll","checkScrollAndFetchData","innerHeight","document","documentElement","scrollTop","fetchMessages","isInitialLoad","updateOffset","Api","get","then","status","pageToken","newMessages","prevMessages","catch","err","console","log","messsageDetails","allMessages","newMessageList","filter","useEffect","timer","setTimeout","clearTimeout","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.431626fd.chunk.js","sourcesContent":["export const BASE_URL =\"https://message-list.appspot.com\";","import axios from \"axios\";\r\nimport {BASE_URL} from \"./../Scripts/Constants\"\r\nexport default axios.create({\r\n    baseURL: `${BASE_URL}/messages`\r\n});","import React, { useState } from \"react\";\r\n\r\nconst EditModal = (props) => {\r\n  // console.log(props)\r\n  const [author, setAuthor] = useState(props.author);\r\n  const [content, setContent] = useState(props.content);\r\n    \r\n  const getModalBody = () => {\r\n        if(props.isDelete) {\r\n            return (\r\n                <div className=\"modal-body\">\r\n                    <h4>Are You Sure You Want To Delete This Message?</h4>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n              <div className=\"modal-body\">\r\n                <div className=\"input-box\">\r\n                  <input\r\n                    placeholder=\"Edit Author Name\"\r\n                    value={author}\r\n                    onChange={(event) => setAuthor(event.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"input-box\">\r\n                  <textarea\r\n                    placeholder=\"Edit Content\"\r\n                    rows=\"8\"\r\n                    cols=\"400\"\r\n                    value={content}\r\n                    onChange={(event) => setContent(event.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n  }\r\n  \r\n  const onSubmit = () => {\r\n      if(props.isDelete) {\r\n          props.toggleModal({delete: true})\r\n      } else {\r\n          props.toggleModal({content, author});\r\n      }\r\n  }\r\n  \r\n  return (\r\n    <div id=\"myModal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"material-icons close\" onClick={() => props.toggleModal({hideOnly: true})}>\r\n            close\r\n          </span>\r\n          <div className=\"modal-header\">\r\n            <h2>{props.isDelete ? \"Delete Message\" : \"Edit Message\"}</h2>\r\n          </div>\r\n          {getModalBody()}\r\n          <div className=\"modal-footer\">\r\n            <button onClick={onSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","const DateUtils = {};\r\n\r\nDateUtils.getUpdatedDays = (date) => {\r\n    let days = (new Date().getTime() - date.getTime())/ (60*60*24*1000)\r\n    if(days / 365 > 0) {\r\n        return Math.round(days / 365) +\" years ago\";\r\n    } else {\r\n        if(365 - days > 0) {\r\n            return (365 - days) + \" days ago\"\r\n        } else {\r\n            return (new Date().getTime() - date.getTime())/ (60*60*1000) + \" hours ago\"\r\n        }\r\n    }\r\n}\r\n\r\nexport {DateUtils}\r\n\r\nexport default DateUtils;","import React, { useState, useMemo } from \"react\";\r\nimport { BASE_URL } from \"../../Scripts/Constants\";\r\nimport EditModal from \"./EditModal\";\r\nimport { DateUtils } from \"./../../Scripts/DateUtils\"\r\nconst MessageCard = (props) => {\r\n  let startTouch = 0;\r\n  const {\r\n    message = {},\r\n    messageIdx = \"\",\r\n    listPosition = \"\",\r\n    updateMessageDetails = () => {},\r\n  } = props || {};\r\n  const { author = {}, content = \"\", updated = \"\" } = message || {};\r\n  const { name = \"\", photoUrl = \"\" } = author || {};\r\n\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [ isDelete, setIsDelete ] = useState(false);\r\n\r\n  const toggleModal = (data = null) => {\r\n      if(data) {\r\n          if(data?.hideOnly) {\r\n              isDelete && \r\n                  setIsDelete(false);\r\n          } else {\r\n              if(!isDelete) {\r\n                  message.author.name = data.author;\r\n                  message.content = data.content;\r\n                  updateMessageDetails({...message, messageIdx, listPosition});\r\n              } else {\r\n                  updateMessageDetails({messageID: message.id, isDelete: true, listPosition})\r\n              }\r\n          }\r\n      }\r\n      setShowModal(prevState => !prevState);\r\n      showButton &&\r\n        setShowButton(false);\r\n  }\r\n\r\n  const touchEvent = (evt) => {\r\n      startTouch = evt.touches[0].screenX;\r\n  }\r\n\r\n  const touchEndEvent = (evt) => {\r\n      let endTouch = evt.changedTouches[0].screenX;\r\n      if (endTouch > startTouch + 60) {\r\n          setShowButton(true);\r\n      } else {\r\n          if(startTouch > endTouch + 60) {\r\n              setShowButton(false);\r\n          }\r\n      }\r\n  }\r\n  \r\n  const enableEditDeleteButton = () => {\r\n      setShowButton(prevState => !prevState)\r\n  }\r\n  \r\n  const CardBody = useMemo(() => {\r\n      return (\r\n        <div className=\"card-body\">\r\n          <div className=\"card-header\">\r\n            <img\r\n              src={`${BASE_URL}${photoUrl}`}\r\n              alt=\"Avatar\"\r\n              className=\"avatar\"\r\n            />\r\n            <div className=\"card-title\">\r\n              <h6 className=\"full-name\">{name}</h6>\r\n              <p className=\"published-date\">\r\n                {DateUtils.getUpdatedDays(new Date(updated))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-content\">{content}</div>\r\n      </div>        \r\n      )\r\n  }, [message])\r\n\r\n  const actionBtnList = [\r\n    {\r\n      name: \"Edit\",\r\n      key: \"edit\",\r\n      icon: \"edit\",\r\n      method: () => {setShowButton(true); toggleModal()}\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      key: \"delete\",\r\n      icon: \"delete\",\r\n      method: () => { setIsDelete(true); toggleModal(); }\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <EditModal isDelete={isDelete} \r\n          toggleModal={toggleModal}\r\n          author={name}\r\n          content={content}\r\n        />\r\n      )}\r\n      <div\r\n        className={`card ${showButton ? \"card-action\" : \"\"}`}\r\n        onDoubleClick={enableEditDeleteButton}\r\n        onTouchStart={touchEvent}\r\n        onTouchEnd={touchEndEvent}\r\n      >\r\n        {showButton && (\r\n          <div className=\"wrap-action-btn\">\r\n            {actionBtnList?.map((item) => {\r\n              const {\r\n                name = \"\",\r\n                key = \"\",\r\n                icon = \"\",\r\n                method = () => {},\r\n              } = item || {};\r\n              return (\r\n                <div className={`action-btn ${key}`} key={key} onClick={method}>\r\n                  <span className=\"action-text\">{name}</span>\r\n                  <span className=\"rotate-270\">\r\n                  <i\r\n                    className=\"material-icons\"\r\n                  >\r\n                    {icon}\r\n                  </i>\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {\r\n          CardBody\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageCard;\r\n","import React from \"react\";\r\nimport MessageCard from \"./MessageCard\";\r\n\r\nconst MessageList = (props) => {\r\n  let { messages, ...otherProps } = props;\r\n  return messages.map((message, idx) => {\r\n    return (\r\n      <MessageCard\r\n        key={message.id}\r\n        message={message}\r\n        messageIdx={idx}\r\n        {...otherProps}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nexport default MessageList;\r\n","import React from \"react\";\r\nconst Toast = (props) => {\r\n    return (<div className={\"toast-msg \"+ props.toastMessageClass}><div className={props.toastMessageClass}>{props.toastMessage}</div></div>)\r\n}\r\n\r\nexport default Toast;","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n    return (Array.from({length: 10}, (item, idx) => (<div key={idx} class=\"card \">\r\n        <div class=\"card-body\">\r\n        <div class=\"card-header\">\r\n            <span class=\"avatar linear-background\"/>\r\n            <div class=\"card-title\">\r\n                <h6 class=\"full-name linear-background\"></h6>\r\n                <p class=\"published-date linear-background\"></p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-content linear-background\"></div>\r\n        </div>\r\n        </div>\r\n    )));\r\n}\r\n\r\nexport default Loader;","import React, { useEffect, useState } from \"react\";\r\nimport Api from \"../Apis/Api\";\r\nimport MessageList from \"../Components/Shared/MessageList\";\r\nimport Toast from \"../Components/Shared/Toast\";\r\nimport Loader from \"../Components/Shared/Loader\";\r\n\r\nexport const Feed = () => {\r\n  const [messageList, setMessageList] = useState([]);\r\n    const [prevToken, setPrevToken] = useState('');\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [offsetHeight, setOffsetHeight] = useState(0);\r\n    const [ showToast, setShowToast ] = useState(false);\r\n    const [ toastDetails, setToastDetails ] = useState({});\r\n    const [isLoading, setIsLoading ] = useState(true);\r\n    let params = {limit : 10};\r\n    \r\n    if(prevToken) {\r\n        params[\"pageToken\"] = prevToken;\r\n        params[\"limit\"] = 100;\r\n    }\r\n\r\n    window.onscroll = (() => {\r\n        checkScrollAndFetchData();\r\n    });\r\n\r\n\r\n    \r\n\r\n    const checkScrollAndFetchData = () => {\r\n        let innerHeight = window.innerHeight;\r\n        if (innerHeight + document.documentElement.scrollTop >= (document.documentElement.offsetHeight - offsetHeight)) {\r\n            if(!isFetching) {\r\n                setIsFetching(true);\r\n                fetchMessages();\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchMessages = (isInitialLoad = false, updateOffset = false) => {\r\n        Api.get('' , {params}).then(data => {\r\n            if(data.status === 200) {\r\n                let { messages, pageToken } = data.data;\r\n                if(updateOffset) {\r\n                    setOffsetHeight((document.documentElement.offsetHeight * 10) / 2);\r\n                }\r\n                let newMessages = [...messageList, messages];\r\n                if(isInitialLoad) {\r\n                    setIsLoading(false)\r\n                    setMessageList(newMessages);\r\n                    params[\"pageToken\"] = pageToken;\r\n                    params[\"limit\"] = 100;\r\n                    fetchMessages(false, true);\r\n                } else {\r\n                    setIsFetching(false);\r\n                    setPrevToken(pageToken);\r\n                    setMessageList(prevMessages => {\r\n                        let newMessages = [...prevMessages, messages];\r\n                        return newMessages\r\n                    });\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const updateMessageDetails = (messsageDetails) => {\r\n        let {messageID, messageIdx, listPosition, isDelete,...message} = messsageDetails;\r\n        let allMessages = [...messageList]\r\n        let newMessageList = [...allMessages[listPosition]];\r\n        setShowToast(true);\r\n        if(!isDelete) {\r\n            newMessageList[messageIdx] = {... message};    \r\n            setToastDetails({toastMessageClass: \"success-toast\" ,toastMessage: \"Message Updated Successfully\"});\r\n        } else {\r\n            newMessageList = newMessageList.filter((message) => message.id != messageID);\r\n            setToastDetails({toastMessageClass: \"delete-toast\" ,toastMessage: \"Message Deleted Successfully\"})\r\n            checkScrollAndFetchData();\r\n        }\r\n        allMessages[listPosition] = newMessageList;\r\n        setMessageList(allMessages);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchMessages(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if(showToast) {\r\n            setTimeout(() => {\r\n                timer = setShowToast(false)\r\n            }, 3000);\r\n        }\r\n        return () => {\r\n          clearTimeout(timer)\r\n        }\r\n    }, [showToast])\r\n\r\n  return (\r\n    <section className=\"feed-section\">\r\n      {\r\n          isLoading && <Loader/>\r\n      }\r\n      {!isLoading && messageList?.map((messages, idx) => {\r\n        return (\r\n          <MessageList\r\n            messages={messages}\r\n            key={idx}\r\n            listPosition={idx}\r\n            updateMessageDetails={updateMessageDetails}\r\n          />\r\n        );\r\n      })}\r\n      {\r\n        showToast && <Toast {...toastDetails}/> \r\n      }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <header>\n      <span className=\"material-icons-outlined menu-mobile-icon\">menu</span>\n      <span className=\"menu-tilte\">Messages</span>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Feed } from \"../src/Pages/Feed\";\nimport { Header } from \"./Components/Layout/Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Feed />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}